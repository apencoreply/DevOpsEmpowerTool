
# stages:
# - stage: JMeterTest
#   displayName: JMeter Test stage
#   dependsOn: Deploy
#   condition: and(succeeded(), eq('${{ parameters.JMeter }}', 'true'))
parameters:
  - name: threads
    type: string
    default: '10'
  - name: rampup
    type: string
    default: '1'
  - name: loops
    type: string
    default: '10'

jobs:
- job: Test
  displayName: Test
  pool:
    vmImage: $(vmImageName)

  steps:
  - task: PowerShell@2
    displayName: 'Install Apache JMeter'
    inputs:
      targetType: 'inline'
      script: |
        $jmeterZipUrl = 'https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.zip'
        $jmeterZipPath = '$(System.DefaultWorkingDirectory)/jmeter.zip'
        $jmeterExtractPath = '$(System.DefaultWorkingDirectory)/jmeter'

        Invoke-WebRequest -Uri $jmeterZipUrl -OutFile $jmeterZipPath
        Expand-Archive -Path $jmeterZipPath -DestinationPath $jmeterExtractPath -Force
  
  - task: PowerShell@2
    displayName: 'Set parameters runtime'
    inputs:
      targetType: 'inline'
      script: |
        $filePath = "$(System.DefaultWorkingDirectory)/FiDelTest.jmx"
        $threads = "$(${{ parameters.threads }})"
        $rampup = "$(${{ parameters.rampup }})"
        $loops = "$(${{ parameters.loops }})"
        $content = Get-Content -Path $filePath -Raw

        $newContent = $content -replace "<stringProp name=`"ThreadGroup.num_threads`">10</stringProp>", "<stringProp name=`"ThreadGroup.num_threads`">$threads</stringProp>"
        $newContent = $newContent -replace "<stringProp name=`"ThreadGroup.ramp_time`">1</stringProp>", "<stringProp name=`"ThreadGroup.ramp_time`">$rampup</stringProp>"
        $newContent = $newContent -replace "<stringProp name=`"LoopController.loops`">10</stringProp>", "<stringProp name=`"LoopController.loops`">$loops</stringProp>"

        $newContent | Set-Content -Path $filePath

  
  - script: |
      cat $(System.DefaultWorkingDirectory)/*.jmx
    displayName: 'Explore results'
  
  - script: |
      $(System.DefaultWorkingDirectory)/jmeter/apache-jmeter-5.6/bin/jmeter -n -t $(System.DefaultWorkingDirectory)/*.jmx -l $(System.DefaultWorkingDirectory)/test_summary.jtl
    displayName: 'Run JMeter Test'

  - script: |
      cat $(System.DefaultWorkingDirectory)/test_summary.jtl
    displayName: 'Explore results'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/test_summary.jtl'
      artifact: 'JTLResults'
